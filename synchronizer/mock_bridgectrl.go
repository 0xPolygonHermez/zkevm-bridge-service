// Code generated by mockery v2.14.0. DO NOT EDIT.

package synchronizer

import (
	etherman "github.com/0xPolygonHermez/zkevm-bridge-service/etherman"
	mock "github.com/stretchr/testify/mock"
)

// bridgectrlMock is an autogenerated mock type for the bridgectrlInterface type
type bridgectrlMock struct {
	mock.Mock
}

// AddDeposit provides a mock function with given fields: deposit
func (_m *bridgectrlMock) AddDeposit(deposit *etherman.Deposit) error {
	ret := _m.Called(deposit)

	var r0 error
	if rf, ok := ret.Get(0).(func(*etherman.Deposit) error); ok {
		r0 = rf(deposit)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// ReorgMT provides a mock function with given fields: depositCount, networkID
func (_m *bridgectrlMock) ReorgMT(depositCount uint, networkID uint) error {
	ret := _m.Called(depositCount, networkID)

	var r0 error
	if rf, ok := ret.Get(0).(func(uint, uint) error); ok {
		r0 = rf(depositCount, networkID)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTnewBridgectrlMock interface {
	mock.TestingT
	Cleanup(func())
}

// newBridgectrlMock creates a new instance of bridgectrlMock. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func newBridgectrlMock(t mockConstructorTestingTnewBridgectrlMock) *bridgectrlMock {
	mock := &bridgectrlMock{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
