// Code generated by mockery v2.22.1. DO NOT EDIT.

package synchronizer

import (
	etherman "github.com/0xPolygonHermez/zkevm-bridge-service/etherman"
	mock "github.com/stretchr/testify/mock"

	pgx "github.com/jackc/pgx/v4"
)

// bridgectrlMock is an autogenerated mock type for the bridgectrlInterface type
type bridgectrlMock struct {
	mock.Mock
}

// AddDeposit provides a mock function with given fields: deposit, depositID, dbTx
func (_m *bridgectrlMock) AddDeposit(deposit *etherman.Deposit, depositID uint64, dbTx pgx.Tx) error {
	ret := _m.Called(deposit, depositID, dbTx)

	var r0 error
	if rf, ok := ret.Get(0).(func(*etherman.Deposit, uint64, pgx.Tx) error); ok {
		r0 = rf(deposit, depositID, dbTx)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// ReorgMT provides a mock function with given fields: depositCount, networkID, dbTx
func (_m *bridgectrlMock) ReorgMT(depositCount uint, networkID uint, dbTx pgx.Tx) error {
	ret := _m.Called(depositCount, networkID, dbTx)

	var r0 error
	if rf, ok := ret.Get(0).(func(uint, uint, pgx.Tx) error); ok {
		r0 = rf(depositCount, networkID, dbTx)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTnewBridgectrlMock interface {
	mock.TestingT
	Cleanup(func())
}

// newBridgectrlMock creates a new instance of bridgectrlMock. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func newBridgectrlMock(t mockConstructorTestingTnewBridgectrlMock) *bridgectrlMock {
	mock := &bridgectrlMock{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
